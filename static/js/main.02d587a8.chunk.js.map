{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","components/Burger/OrderSummary/OrderSummary.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigatonItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","App.module.css","assets/img/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","containers/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigatonItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Login.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","Logo","className","s","src","BurgerLogo","alt","NavItem","NavigationItem","to","link","exact","activeClassName","active","NavItems","NavigationItems","Authenticated","Aux","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","Auth","Backdrop","show","SideDrawer","attachedClasses","Closed","open","Open","closed","join","LogoWrapper","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","isAuth","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Tomato","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","ordered","Modal","modalClosed","style","transform","opacity","visibility","Button","btnType","OrderSummary","ingredientSummary","Li","Item","cancel","continue","instance","axios","create","baseURL","Spinner","loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","email","password","isSignedUp","authData","returnSecureToken","url","post","then","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","BurgerBuilder","purchasing","purchaseHandler","isAuthenticated","history","push","backdropHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","purchasable","bb","burgerBuilder","totalPrice","ingName","ingredientName","get","CheckoutSummary","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","validationError","ContactData","orderForm","name","placeholder","validation","required","valid","street","postalCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","checkValidity","rules","isValid","trim","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","id","config","form","onSubmit","formElement","loading","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseRedirect","purchased","path","match","component","Order","amount","ingredientOutput","ig","Orders","onFetchOrders","orders","queryParams","fetchedOrders","isEmail","isSignup","test","isNumeric","controlName","updatedControls","submitHandler","onAuth","errorMessage","authRedirect","Login","Logout","onLogout","App","onTryAutoSignup","routs","gs","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","tomato","reducer","action","newOrder","updatedObject","oldObject","updatedProperties","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02d587a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\",\"Tomato\":\"BurgerIngredient_Tomato__1q000\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Closed\":\"SideDrawer_Closed__wRM5T\",\"LogoWrapper\":\"SideDrawer_LogoWrapper__MKJgG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"OrderSummary_Item__3g_SD\",\"Li\":\"OrderSummary_Li__LFi3W\",\"OrderSummary\":\"OrderSummary_OrderSummary__8_D7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1RmtX\",\"active\":\"NavigationItem_active__1n9Lh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\",\"Burger\":\"CheckoutSummary_Burger__1wJm6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"App-logo\":\"App_App-logo__25k4o\",\"App-logo-spin\":\"App_App-logo-spin__1e7sv\",\"App-header\":\"App_App-header__xLkWl\",\"App-link\":\"App_App-link__3FsH9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__PrDi6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load1\":\"Spinner_load1__1BXDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport BurgerLogo from './../../assets/img/logo.png';\nimport s from './Logo.module.css';\n\nconst Logo = () =>(\n    <div className={s.Logo}>\n        <img src={BurgerLogo} alt=\"BurgerLogo\"/>\n    </div>\n);\n\nexport default Logo","import React from 'react';\nimport s from './NavigationItem.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst NavItem = (props) => (\n    <li className={s.NavigationItem}>\n        <NavLink\n            to={props.link}\n            exact\n            activeClassName={s.active}>{props.children}\n        </NavLink>\n    </li>\n);\n\nexport default NavItem","import React from 'react';\nimport s from './NavigationItems.module.css';\nimport NavItem from './NavigatonItem/NavigationItem';\nimport Aux from './../../../hoc/Aux';\n\nconst NavItems = (props) => (\n    <ul className={s.NavigationItems}>\n        <NavItem link='/' >Burger Builder</NavItem>\n        {props.Authenticated\n            ? <NavItem link='/orders'>Orders</NavItem>\n            : null\n        }\n        {props.Authenticated\n            ? \n            <NavItem link='/logout'>Logout</NavItem>\n            : \n            <Aux>\n                <NavItem link='/login'>Log In</NavItem>\n                <NavItem link='/auth'>Sign Up</NavItem>\n            </Aux>\n        }\n\n    </ul>\n);\n\nexport default NavItems","import React from 'react';\nimport s from './DrawerToggle.module.css';\n\nconst DrawerToggle = (props) => (\n    <div\n        className={s.DrawerToggle}\n        onClick={props.clicked}>\n        MENU\n    </div>\n);\n\nexport default DrawerToggle;","import React from 'react';\nimport s from './Toolbar.module.css';\nimport Logo from './../../Logo/Logo';\nimport NavigationItems from './../NavigationItems/NavigationItems';\nimport DrawerToggle from './../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst Toolbar = (props) => (\n    <header className={s.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <Logo></Logo>\n        <nav className={s.DesktopOnly}>\n            <ul>\n               <NavigationItems\n               Authenticated = {props.Auth}/>\n            </ul>\n        </nav>\n    </header>\n);\n\nexport default Toolbar","import React from 'react';\nimport s from './Backdrop.module.css';\n\nconst Backdrop = (props) => (\n    props.show ? <div className={s.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default Backdrop;\n\n","import React from 'react';\nimport s from './SideDrawer.module.css';\nimport Backdrop from './../../UI/Backdrop/Backdrop';\nimport Logo from './../../Logo/Logo';\nimport NavItems from './../NavigationItems/NavigationItems';\nimport Aux from './../../../hoc/Aux';\n\n\n\nconst SideDrawer = (props) => {\n\n    let attachedClasses = [s.SideDrawer, s.Closed];\n    if (props.open) {\n        attachedClasses = [s.SideDrawer, s.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')}>\n\n                <div className={s.LogoWrapper}>\n                    <Logo></Logo>\n                </div>\n\n                <nav>\n                    <NavItems\n                        Authenticated={props.Auth}/>\n                </nav>\n\n            </div>\n        </Aux>\n    );\n};\n\nexport default SideDrawer;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nimport s from './Layout.module.css';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({\n            showSideDrawer: false\n        })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer }\n        });\n    }\n\n   \n    render() {\n        return (\n            <Aux>\n                <Toolbar \n                    Auth = {this.props.isAuth}\n                    drawerToggleClicked={this.sideDrawerToggleHandler}/>\n                <SideDrawer\n                    Auth={this.props.isAuth}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={s.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.token !== null\n    };\n};\n\nexport default connect(mapStateToProps)(Layout);\n\n","import React, { Component } from 'react';\nimport s from './BurgerIngredient.module.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={s.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = <div className={s.BreadTop}>\n                    <div className={s.Seeds1}></div>\n                    <div className={s.Seeds2}></div>\n                </div>\n                break;\n            case ('meat'):\n                ingredient = <div className={s.Meat}></div>\n                break;\n            case ('cheese'):\n                ingredient = <div className={s.Cheese}></div>\n                break;\n            case ('bacon'):\n                ingredient = <div className={s.Bacon}></div>\n                break;\n            case ('salad'):\n                ingredient = <div className={s.Salad}></div>\n                break;\n            case ('tomato'):\n                ingredient = <div className={s.Tomato}></div>\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\nimport s from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst Burger = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        // Transform an object on key: value / pairs into keys and values.\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n            return <BurgerIngredient key={igKey + i} type = {igKey} />\n        }); // [ a , b ]\n    })\n    .reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n\n    if (transformedIngredients.length === 0){\n        transformedIngredients = <p>Add some ingredients</p>;\n    }\n    // console.log(transformedIngredients);\n    \n    return (\n        <div className={s.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformedIngredients}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    );\n};\n\nexport default Burger","import React from 'react';\nimport s from './BuildControl.module.css';\n\nconst BuildControl = (props) => (\n    <div className={s.BuildControl}>\n        <div className={s.Label}>{props.label}</div>\n        <button className={s.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={s.More} onClick={props.added}>More</button>\n    </div>\n);\n\nexport default BuildControl;\n\n","import React from 'react';\n\nimport s from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n    { label: 'Tomato', type: 'tomato' }\n];\n\nconst BuildControls = (props) => (\n    <div className={s.BuildControls}>\n        <p>This burger will cost: <strong>${props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl\n                key={ctrl.label}\n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button\n            className={s.OrderButton}\n            disabled={props.price <= 4} \n            onClick={props.ordered}\n        >{props.isAuth ? 'ORDER NOW' : 'SIGN UP'}</button>\n    </div>\n);\n\n\nexport default BuildControls;\n","import React from 'react';\nimport s from './Modal.module.css';\nimport Aux from './../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n// import Backdrop from './../Backdrop/Backdrop';\n\nconst Modal = (props) => (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\n        <div className={s.Modal}\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0',\n                visibility: props.show ? 'visible' : 'hidden'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n);\n\n\nexport default Modal;\n\n","import React from 'react';\nimport s from './Button.module.css';\n\nconst Button = (props) => (\n    <button\n        disabled={props.disabled}\n        onClick={props.clicked}\n        className={[s.Button, s[props.btnType]].join(' ')}>{props.children}\n    </button>\n);\n\n\nexport default Button;\n\n","import React from 'react';\nimport s from './OrderSummary.module.css';\nimport Button from './../../UI/Button/Button';\n\nconst OrderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n        .map(igKey => {\n            return (\n                <li className={s.Li} key={igKey}>\n                    <div className={s.Item}>{igKey}:</div> <div>{props.ingredients[igKey]}</div>\n                </li>\n            );\n        });\n    return (\n        <div className={s.OrderSummary}>\n            <h3>Your order</h3>\n            <p>A Burger with:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p>The total is: <strong>${props.price.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n\n            <Button clicked={props.cancel} btnType='Danger'>Cancel</Button>\n            <Button clicked={props.continue} btnType='Success'>Continue</Button>\n        </div>\n    );\n}\n\nexport default OrderSummary;\n\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-burger-70ff3.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react';\nimport s from './Spinner.module.css';\n\n\nconst Spinner = (props) => (\n    <div className={s.loader}>Loading...</div>\n);\n\n\nexport default Spinner;\n\n","import React, { Component } from 'react';\n// import s from './withErrorHandler.module.css';\n\nimport Modal from './../../components/UI/Modal/Modal';\nimport Aux from './../Aux';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n        componentWillMount() {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            });\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null})\n        }\n\n        render() {\n            return (\n                <Aux>\n                    <Modal show={this.state.error}\n                    modalClosed={this.errorConfirmedHandler}>\n                        {/* Modal Error! */}\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;\n\n","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() =>{\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n}\n\nexport const auth = (email, password, isSignedUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        }\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAdrfw7J1RSNopZkGcyyA7Nx7XWGX48W7A';\n        if (!isSignedUp){\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAdrfw7J1RSNopZkGcyyA7Nx7XWGX48W7A';\n        }\n        axios.post(url, authData)\n        .then(response => {\n            console.log(response);\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate);\n            localStorage.setItem('userId', response.data.localId);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n        })\n        .catch(err => {\n            console.log(err);\n            dispatch(authFail(err.response.data.error));\n        });\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token){\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date (localStorage.getItem('expirationDate'));\n            if (expirationDate > new Date()){\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            } else {\n                dispatch(logout())\n            }\n        }\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport s from './BurgerBuilder.module.css';\nimport Burger from './../../components/Burger/Burger';\nimport BuildControls from './../../components/Burger/BuildControls/BuildControls';\nimport Modal from './../../components/UI/Modal/Modal';\nimport OrderSummary from './../../components/Burger/OrderSummary/OrderSummary';\nimport axios from './../../axios-orders';\nimport Spinner from './../../components/UI/Spinner/Spinner';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\nimport Aux from './../../hoc/Aux';\nimport * as actions from './../../store/actions/index';\n\n\n\nclass BurgerBuilder extends Component {\n    state = {\n        purchasing: false,\n        // loading: false\n    }\n\n    componentDidMount (){\n        this.props.onInitIngredients();\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated){\n            this.setState({\n                purchasing: true\n            });\n        } else {\n            this.props.history.push('/auth');\n        }\n        \n    }\n    backdropHandler = () => {\n        this.setState({\n            purchasing: false\n        });\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n\n\n    render() {\n        //      Disabling buttons if 0\n        //      Converting value pairs to  ||  key: true \n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let orderSummary = null;\n        \n\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />\n        if (this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.state.purchasable}\n                        price={this.props.price}\n                        isAuth={this.props.isAuthenticated}\n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                continue={this.purchaseContinueHandler}\n                cancel={this.backdropHandler}\n                price={this.props.price} />\n        }\n\n\n        // if (this.state.loading) {\n        //     orderSummary = <Spinner />\n        // }\n\n        return (\n            <div className={s.bb}>\n                \n                <Modal show={this.state.purchasing} modalClosed={this.backdropHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients, \n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit())  \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps )(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\nimport axios from './../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-burger-70ff3.firebaseio.com/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n                console.log(response);\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed());\n                console.log('Error')\n            });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from './../../axios-orders';\n\n\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\n\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const pruchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(pruchaseBurgerStart());\n        axios.post(\"/orders.json?auth=\" + token, orderData)\n            .then(response => {\n                // console.log(response.data);\n                dispatch(purchaseBurgerSuccess(response.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\n\n////////////////////////\n// FETCHING ORDERS//////\n////////////////////////\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart()); \n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'; \n        axios.get('/orders.json' + queryParams)\n            .then(res => {\n                const fetchedOrders = [];\n                // console.log(fetchedOrders);\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err))\n            });\n    };\n};","import React from 'react';\nimport s from './CheckoutSummary.module.css';\nimport Burger from './../../Burger/Burger';\nimport Button from './../../UI/Button/Button';\n\n\n\n\nconst CheckoutSummary = (props) => {\n    return (\n        <div className={s.CheckoutSummary}>\n            <h1>it tastes well</h1>\n            <div className={s.Burger}>\n                <Burger ingredients={props.ingredients} />\n                <Button\n                    btnType=\"Danger\"\n                    clicked={props.checkoutCancelled}>CANCEL</Button>\n                <Button\n                    btnType=\"Success\"\n                    clicked={props.checkoutContinued}>CONTINUE</Button>\n            </div>\n        </div>\n    );\n\n};\n\nexport default CheckoutSummary;\n\n","import React from 'react';\nimport s from './Input.module.css';\n\nconst Input = (props) => {\n    \n    let inputElement = null;\n    const inputClasses = [s.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(s.Invalid);\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case ('textarea'):\n            inputElement = <textarea className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n\n        case ('select'):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    let validationError = null;\n    if (props.invalid && props.shouldValidate && props.touched){\n        validationError = <p>That doesn't look valid!</p>   \n    }\n    \n\n    return (\n        <div className={s.Input}>\n            <label className={s.Label}> {props.label} </label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n};\n\n\nexport default Input;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nimport axios from './../../../axios-orders';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport Button from './../../../components/UI/Button/Button';\nimport Input from './../../../components/UI/Input/Input';\nimport Spinner from './../../../components/UI/Spinner/Spinner';\nimport s from './ContactData.module.css';\nimport * as actions from './../../../store/actions/index';\n\nclass ContactData extends Component {\n\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            postalCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: '',\n\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 7\n                },\n                valid: false,\n                touched: false\n            },\n\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n\n\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fastest' },\n                        { value: 'cheapest', displayValue: 'Cheapest' },\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n\n    orderHandler = event => {\n        event.preventDefault();\n\n        // Extracting values of the input fields\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        };\n\n        this.props.onOrderBurger(order, this.props.token);\n        this.props.history.push(\"/\");\n    };\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if (rules.required){\n            isValid = value.trim() !=='' && isValid;\n        }\n        if (rules.minLength){\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n\n        // if (rules.isEmail) {\n        //     const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        //     isValid = pattern.test(value) && isValid\n        // }\n\n        // if (rules.isNumeric) {\n        //     const pattern = /^\\d+$/;\n        //     isValid = pattern.test(value) && isValid\n        // }\n\n\n        return isValid\n    }\n\n    // Input two way binding \n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation); //Check validity\n        updatedFormElement.touched = true;\n        // console.log(updatedFormElement);\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render() {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n\n\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                    key={formElement.id}\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={ (event) => this.inputChangedHandler(event, formElement.id)}\n                    />\n                ))}\n                <Button btnType='Success' disabled={!this.state.formIsValid} clicked={this.orderHandler}>ORDER</Button>\n            </form>\n        );\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        return (\n            <div className={s.ContactData}>\n                <h4>Enter your contact data</h4>\n                {form}\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\n\n","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n// import * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to='/' />\n        if (this.props.ings) {\n            const purchaseRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary = (\n                <div>\n                    {purchaseRedirect}\n                    <CheckoutSummary\n                    ingredients={this.props.ings}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return (\n            <div>\n                {summary}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport s from './Order.module.css';\n\n\nconst Order = (props) => {\n\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            // same kind of transformation as in burger.js\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => { \n    return <span key={ig.name}>{ig.name} ({ig.amount})</span>   \n    })\n\n    return (\n        <div className={s.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\n        </div>\n    );\n};\n\nexport default Order;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport s from './Orders.module.css';\nimport Order from './../../components/Order/Order';\nimport axios from './../../axios-orders';\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from './../../store/actions/index';\nimport Spinner from './../../components/UI/Spinner/Spinner';\n\n\n\nclass Orders extends Component {\n  \n    componentDidMount() {\n      this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render() {\n        let orders = <Spinner />\n\n        if (!this.props.loading){\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ))\n        }\n\n        return (\n            <div className={s.Orders}>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport s from './Auth.module.css';\nimport Input from './../../components/UI/Input/Input';\nimport Button from './../../components/UI/Button/Button';\nimport Spinner from './../../components/UI/Spinner/Spinner';\nimport * as actions from './../../store/actions/index';\n\nclass Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 7\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n        return isValid\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({ controls: updatedControls });\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    }\n\n    // switchAuthModeHandler = () => {\n    //     console.log('Current path is: ' + window.location.pathname)\n    //     if (window.location.pathname === '/auth'){\n    //         this.setState(prevState => {\n    //             return (\n    //                 { isSignup: true }\n    //             );\n    //         })\n    //     } else if (window.location.pathname === '/login'){\n    //         this.setState(prevState => {\n    //             return (\n    //                 { isSignup: false }\n    //             );\n    //         })\n    //     }\n    // }\n\n\n    render() {\n        \n\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\n            />\n        ));\n\n        if (this.props.loading){\n            form = <Spinner/>\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = <p>{this.props.error.message}</p>\n        }\n\n            \n        \n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to='/'/>\n        }\n\n        return (\n            <div className={s.Auth}>\n                {authRedirect}\n                <h3>Enter to Get the Best Burgers!</h3>\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    {errorMessage}\n                    <Button btnType=\"Success\">DONE</Button>\n                </form>\n                {/* <Button\n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">{this.state.isSignup\n                        ? 'I dont have an account and I want to Sign up'\n                        : 'I have an account and I want to Log In'}</Button> */}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignedUp) => dispatch(actions.auth(email, password, isSignedUp))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport s from './Auth.module.css';\nimport Input from './../../components/UI/Input/Input';\nimport Button from './../../components/UI/Button/Button';\nimport Spinner from './../../components/UI/Spinner/Spinner';\nimport * as actions from './../../store/actions/index';\n\nclass Login extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 7\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: false\n    }\n\n    checkValidity = (value, rules) => {\n        let isValid = true;\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n        return isValid\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({ controls: updatedControls });\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\n            />\n        ));\n\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = <p>{this.props.error.message}</p>\n        }\n\n\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to='/' />\n        }\n\n        return (\n            <div className={s.Auth}>\n                {authRedirect}\n                <h3>Enter to Get the Best Burgers!</h3>\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    {errorMessage}\n                    <Button btnType=\"Success\">DONE</Button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignedUp) => dispatch(actions.auth(email, password, isSignedUp))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from './../../../store/actions/index';\n\nclass Logout extends Component {\n\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return (\n            <Redirect to='/'/>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       onLogout: () => dispatch(actions.logout()) \n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport Aux from './hoc/Aux';\nimport gs from './App.module.css';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Login from './containers/Auth/Login';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n\n    let routs = (\n      <Aux>\n        <Route path='/' component={Layout} />\n        <Route path='/auth' component={Auth} />\n        <Route path='/login' component={Login} />\n        <Route exact path='/' component={BurgerBuilder} />\n        <Redirect to='/' />\n      </Aux>\n    );\n\n    if (this.props.isAuthenticated) {\n      routs = (\n        <Aux>\n          <Route path='/' component={Layout} />\n          <Route exact path='/' component={BurgerBuilder} />\n          <Route path='/checkout' component={Checkout} />\n          <Route exact path='/orders' component={Orders} />\n          <Route path='/logout' component={Logout} />\n          <Redirect to='/' />\n        </Aux>\n      );\n    }\n\n    return (\n      <div className={gs.App}>\n        {routs}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n// withRouter\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: .5,\n    cheese: .4,\n    meat: 1.2,\n    bacon: .7,\n    tomato: .6\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.SET_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: 4,\n                error: false\n            };\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            return {\n                ...state,\n                error: true\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from './../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n            }\n        case actionTypes.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n\n            };\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId,\n            }\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            };\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false,\n            };\n        case actionTypes.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const updatedObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from './../actions/actionTypes';\nimport { updatedObject } from '../utility';\n\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false\n};\n\n\nconst authStart = (state, action) => {\n    return updatedObject(state, { \n        error: null, \n        loading: true \n    });\n};\n\nconst authSuccess = (state, action) => {\n    return updatedObject( state, {\n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n    });\n};\n\nconst authFail = (state, action) => {\n    return updatedObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\n\nconst authLogout = (state, action) => {\n    return updatedObject(state, {token: null, userId: null});\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n            default:\n                return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers ({\n    burgerBuilder : burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer \n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\n\nReactDOM.render( app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}